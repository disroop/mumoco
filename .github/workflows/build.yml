name: Build

on:
  push:
    branches-ignore:
      - "dependabot/**"
  pull_request:
  release:
    types: [created]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v2
      - name: Set up python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Install Poetry
        uses: snok/install-poetry@v1.1.6
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
      - name: Install dependencies
        run: poetry install --no-interaction --no-root
      - name: Install library
        run: poetry run invoke install-libraries
      - name: Check format with black
        run: poetry run invoke check-format-with-black
      - name: Lint with flake8
        run: poetry run invoke lint-with-flake8
        # todo add mypy
      - name: Run tests
        run: poetry run invoke run-tests
      - name: Fix Code Coverage Paths
        run: |
          sed -i "s@${GITHUB_WORKSPACE}@/github/workspace/@g" ./reports/coverage.xml
      - name: SonarCloud Scan
        if: github.event_name != 'pull_request'
        uses: sonarsource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      - name: Build
        run: poetry run invoke build
      - name: Publish Dry Run
        if: github.event_name == 'push'
        run: poetry run invoke publish --pypiusername="${{ secrets.PYPI_USERNAME }}" --pypipassword="${{ secrets.PYPI_PASSWORD }}" --dryrun
      - name: Publish
        if: github.event_name == 'release' && github.event.action == 'created'
        run: poetry run invoke publish --pypiusername="${{ secrets.PYPI_USERNAME }}" --pypipassword="${{ secrets.PYPI_PASSWORD }}"
